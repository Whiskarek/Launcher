apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply from: 'DeployAppCenter.gradle'

def keystoreProperties = new Properties()
if (System.getenv("CI") == null) {
    def keystorePropertiesFile = rootProject.file("keystore/keystore.properties")
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "by.whiskarek.yandexlauncher"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def fabricKey
        def appCenterKey

        if (System.getenv("CI") != null) {
            appCenterKey = System.getenv("APPCENTER_KEY")
            fabricKey = System.getenv("FABRIC_API_KEY")
        } else {
            appCenterKey = keystoreProperties['appcenterKey']
            fabricKey = keystoreProperties["fabricKey"]
        }

        manifestPlaceholders = [fabricKey:fabricKey]
        buildConfigField("String", "APPCENTER_KEY", "\"$appCenterKey\"")
    }
    signingConfigs {
        release {
            storeFile rootProject.file('keystore/Keystore.jks')
            if (System.getenv("CI") != null) {
                storePassword System.getenv("STORE_PASSWORD")
                keyPassword System.getenv("KEY_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
            } else {
                storePassword keystoreProperties['storePassword']
                keyPassword keystoreProperties['keyPassword']
                keyAlias keystoreProperties['keyAlias']
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            ext.betaDistributionGroupAliases = 'andrew-shkrob-1'
            def path = "release-notes/${defaultConfig.versionName}.md"
            ext.betaDistributionReleaseNotesFilePath = rootProject.file(path).getPath()
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.1.0-alpha04'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    // Fabric
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.8@aar') {
        transitive = true
    }
    // App Center
    def appCenterSdkVersion = '1.11.2'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-distribute:${appCenterSdkVersion}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}